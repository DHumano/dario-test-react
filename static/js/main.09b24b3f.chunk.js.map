{"version":3,"sources":["StudentsList.js","components/Styled.js","components/Search.jsx","components/Error.jsx","components/ResidentList.jsx","components/Container.jsx","App.js","reportWebVitals.js","index.js"],"names":["students","name","validityDate","Component","styled","div","Header","Subtitle","Wrapper","ContainerError","List","Search","useStudentList","list","setList","setError","setStudent","setJoiningDate","student","joiningDate","TextField","onChange","e","target","value","id","label","type","defaultValue","InputLabelProps","shrink","Button","onClick","isStudent","filter","element","toUpperCase","length","initialDate","initial","Date","validity","getTime","checkValidity","toISOString","variant","color","Error","error","Alert","severity","ResidentList","map","StudentListContext","createContext","useContext","Container","useState","values","Provider","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.09b24b3f.chunk.js","sourcesContent":["export const students = [\n    {\n        name: 'Jane',\n        validityDate: '2021-11-25'\n    },\n    {\n        name: 'Mariah',\n        validityDate: '2022-03-23'\n    },\n    {\n        name: 'John',\n        validityDate: '2022-03-23'\n    },\n    {\n        name: 'Bettany',\n        validityDate: '2022-03-23'\n    },\n    {\n        name: 'Lisa',\n        validityDate: '2022-03-23'\n    },\n    {\n        name: 'Michael',\n        validityDate: '2022-03-23'\n    },\n    {\n        name: 'Eric',\n        validityDate: '2022-03-23'\n    }\n];\n","import styled from 'styled-components';\n\nexport const Component = styled.div`\n    background: white;\n    width: 22em;\n    height: 22em;\n`;\n\nexport const Header = styled.div`\n    background: #2e374a;\n    width: 22em;\n    height: 3em;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    color: green;\n`;\n\nexport const Subtitle = styled.div`\n    color: black;\n    margin-top: 1em;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n`;\n\nexport const Wrapper = styled.div`\n    display: flex;\n    justify-content: space-around;\n    padding-top: 1em;\n`;\n\nexport const ContainerError = styled.div`\n    margin: 3em;\n`;\n\nexport const List = styled.div`\n    color: black;\n`;\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport { students } from '../StudentsList';\nimport { useStudentList } from './Container';\nimport * as S from './Styled';\n\nconst Search = () => {\n    const { list, setList, setError, setStudent, setJoiningDate, student, joiningDate } =\n        useStudentList();\n\n    const checkStudentValidity = () =>\n        students.filter((element) => element.name.toUpperCase() === student.toUpperCase());\n\n    const checkValidity = (initialDate, validityDate) => {\n        const initial = new Date(initialDate);\n        const validity = new Date(validityDate);\n        return initial.getTime() < validity.getTime();\n    };\n\n    const persistList = () => {\n        setList([...list, student]);\n    };\n\n    const handleInputsClean = () => {\n        setError(false);\n        setStudent('');\n        setJoiningDate(new Date().toISOString());\n    };\n\n    const handleClick = () => {\n        setError(false);\n        if (!student) {\n            return false;\n        }\n\n        const isStudent = checkStudentValidity();\n        if (!isStudent.length) {\n            setError(`Sorry, ${student} is not a verified student!`);\n            return false;\n        }\n\n        const dateIsValid = checkValidity(joiningDate, isStudent[0].validityDate);\n\n        if (!dateIsValid) {\n            setError(`Sorry, ${student}'s validity has Expired`);\n            return false;\n        }\n\n        persistList();\n        handleInputsClean();\n\n        return true;\n    };\n\n    return (\n        <S.Wrapper>\n            <TextField\n                onChange={(e) => setStudent(e.target.value)}\n                id=\"standard-basic\"\n                label=\"Student Name\"\n            />\n            <TextField\n                onChange={(e) => setJoiningDate(e.target.value)}\n                id=\"date\"\n                label=\"Joining Date\"\n                type=\"date\"\n                defaultValue={joiningDate}\n                InputLabelProps={{\n                    shrink: true\n                }}\n            />\n            <Button onClick={handleClick} variant=\"contained\" color=\"primary\">\n                Add\n            </Button>\n        </S.Wrapper>\n    );\n};\n\nexport default Search;\n","import React from 'react';\nimport Alert from '@material-ui/lab/Alert';\nimport { useStudentList } from './Container';\nimport * as S from './Styled';\n\nconst Error = () => {\n    const { error } = useStudentList();\n\n    return (\n        <S.ContainerError>\n            <Alert variant=\"outlined\" severity=\"error\">\n                {error}\n            </Alert>\n        </S.ContainerError>\n    );\n};\n\nexport default Error;\n","import React from 'react';\nimport { useStudentList } from './Container';\nimport * as S from './Styled';\n\nconst ResidentList = () => {\n    const { list } = useStudentList();\n\n    return (\n        <>\n            <S.Subtitle>Resident List</S.Subtitle>\n            {list.map((element) => (\n                <S.List key={element}>\n                    <ul>{element}</ul>\n                </S.List>\n            ))}\n        </>\n    );\n};\n\nexport default ResidentList;\n","import React, { createContext, useContext, useState } from 'react';\nimport Search from './Search';\nimport Error from './Error';\nimport ResidentList from './ResidentList';\nimport * as S from './Styled';\n\nexport const StudentListContext = createContext();\n\nexport const useStudentList = () => useContext(StudentListContext);\n\nconst Container = () => {\n    const [student, setStudent] = useState('');\n    const [joiningDate, setJoiningDate] = useState(new Date().toISOString());\n    const [error, setError] = useState(false);\n    const [list, setList] = useState([]);\n\n    const values = {\n        student,\n        setStudent,\n        joiningDate,\n        setJoiningDate,\n        list,\n        setList,\n        error,\n        setError\n    };\n\n    return (\n        <>\n            <S.Header>Hacker Dormitory</S.Header>\n            <S.Component>\n                <StudentListContext.Provider value={values}>\n                    <Search />\n                    {error && <Error />}\n                    <ResidentList />\n                </StudentListContext.Provider>\n            </S.Component>\n        </>\n    );\n};\n\nexport default Container;\n","import React from 'react';\nimport './App.css';\nimport Container from './components/Container';\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <header className=\"App-header\">\n                <Container />\n            </header>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}